version: '3.8'

services:
  app-nginx:
    build:
      context: ./docker/nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html
      - nginx-cache:/var/cache/nginx
      - ssl-certs:/etc/letsencrypt
    depends_on:
      - php
    networks:
      - app-network
    restart: unless-stopped
    environment:
      - NGINX_HOST=${DOMAIN_NAME:-localhost}

  php:
    build:
      context: ./docker/php
    volumes:
      - ./:/var/www/html
      - php-cache:/tmp
    depends_on:
      - mysql
    networks:
      - app-network
    restart: unless-stopped
    environment:
      - DATABASE_SERVER=mysql
      - DATABASE_USERNAME=${DB_USERNAME}
      - DATABASE_PASSWORD=${DB_PASSWORD}
      - DATABASE_NAME=${DB_DATABASE}
      - SITE_URL=${SITE_URL}
      - PHP_OPCACHE_ENABLE=1
      - PHP_APCU_ENABLE=1

  mysql:
    image: mysql:8.0
    volumes:
      - mysql-data:/var/lib/mysql
      - ./docker/mysql:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    networks:
      - app-network
    restart: unless-stopped
    command: --innodb-buffer-pool-size=128M --max-connections=100

  redis:
    image: redis:7-alpine
    volumes:
      - redis-data:/data
    networks:
      - app-network
    restart: unless-stopped
    command: redis-server --maxmemory 64mb --maxmemory-policy allkeys-lru

volumes:
  mysql-data:
    driver: local
  redis-data:
    driver: local
  nginx-cache:
    driver: local
  php-cache:
    driver: local
  ssl-certs:
    driver: local

networks:
  app-network:
    driver: bridge
